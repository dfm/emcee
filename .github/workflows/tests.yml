name: Tests

on:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "joss/**"
      - "docs/**"
  pull_request:

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: ["ubuntu-latest"]
        include:
          - python-version: "3.9"
            os: "macos-latest"
          - python-version: "3.9"
            os: "windows-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U coveralls coverage[toml] tox tox-gh-actions
      - name: Run tests
        run: python -m tox
      - name: Combine and upload coverage
        run: |
          python -m coverage combine
          python -m coverage xml -i
          python -m coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}-${{ matrix.os }}

  numpy_edge:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12"]
        numpy-version: ["numpy>=2.0.0rc1"]
        os: ["ubuntu-latest"]
        include:
          - python-version: "3.9"
            numpy-version: "numpy<1.25"
            os: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install pip install pytest "${{ matrix.numpy-version }}"
          python -m pip install -e.
      - name: Run tests
        run: pytest

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Finish coverage collection
        run: |
          python -m pip install -U pip
          python -m pip install -U coveralls
          python -m coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install tox
      - name: Lint the code
        run: python -m tox -e lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.9"
      - name: Build sdist and wheel
        run: |
          python -m pip install -U pip
          python -m pip install -U build
          python -m build .
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*

  upload_pypi:
    needs: [tests, lint, build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
